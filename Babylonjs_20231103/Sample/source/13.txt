<html>
  <head>
    <!--babylon.jsの読み込み-->
    <script src="https://cdn.babylonjs.com/babylon.js"></script>
    <!--実際の処理の実装-->
    <script type="text/javascript">
      let canvas; //canvas要素 (描画領域)
      let engine; //Babylon.jsによる描画機能
      let scene; //仮想3D空間
      //ページの読み込み終了後に各種初期化を行う
      window.onload = function() {
        //描画領域(canvas要素)をHTMLから取得
        canvas = document.getElementById("renderCanvas");
        //Babylon.jsを使ってcanvasに描画する準備 (引数：描画先,アンチエイリアス)
        engine = new BABYLON.Engine(canvas, true);     
        //カメラやライトの設定を行ったscene(3D空間)を作成
        createScene();
        //描画オブジェクトの作成
        addObjects();
        //XRモードの初期化
        initializeXR();
        //毎フレーム描画を更新
        engine.runRenderLoop(function () {
          if (scene && scene.activeCamera) {
            scene.render();
          }
        });
      }
      //3D空間の初期化
      function createScene() {
        //3D空間を作成
        scene = new BABYLON.Scene(engine);
        //背景色を設定
        scene.clearColor = new BABYLON.Color3.Black();
        //Lightを設定 (引数：名前,反射の方向,追加先)
        let light = new BABYLON.HemisphericLight("light", new BABYLON.Vector3(1, 1, -0.5));
        //カメラを作成(引数：名前, alpha, beta, 注視点からの距離, 注視点,追加先) 
        let camera = new BABYLON.ArcRotateCamera("camera", -Math.PI/2,Math.PI/2, 3, new BABYLON.Vector3(0, 0, 0));
        //マウスやキーボードによるカメラ操作を可能にする
        camera.attachControl(canvas, true);              
      }
      //WebXRの初期化
      async function initializeXR(){
        let xr = await scene.createDefaultXRExperienceAsync({/*ここでオプションも設定可能*/});    
        //XRモード利用可能か不可かを確認
        if (!xr.baseExperience) {}
        else {
          //利用可能な場合はハンドトラッキングをオンにする 
          xr.baseExperience.featuresManager.enableFeature(BABYLON.WebXRFeatureName.HAND_TRACKING, "latest", {
            xrInput: xr.input
          });
        }

      }
      //表示オブジェクトの初期化
      function addObjects(){    
        //地面を作成(原点の位置確認用。あとで削除してOK)
        let ground = BABYLON.MeshBuilder.CreateGround("ground", {width: 1, height: 1});    
        //箱状のオブジェクト作成(30cm)
        let box = BABYLON.MeshBuilder.CreateBox("box", {width: 0.3, height: 0.3, depth: 0.3});
        box.position.x = 0.0;
        box.position.y = 1;
        //箱の色をランダムに設定
        let boxMaterial = new BABYLON.StandardMaterial("material");
        boxMaterial.diffuseColor = BABYLON.Color3.Random();
        box.material = boxMaterial; 
        //8面体を作成
        let octa = BABYLON.MeshBuilder.CreatePolyhedron("octa", {type:1,size: 0.15}); 
        octa.position.x=0.5;
        octa.position.y=1;
        
        //boxに手で掴んで移動できる属性を追加
        let dragBehavior = new BABYLON.SixDofDragBehavior();
        //片手での操作のみ受け付ける(両手でのスケールでの挙動がおかしいため)
        dragBehavior.allowMultiPointer=false;
        //離れた位置からポインターで操作する場合は位置のみ追従
        dragBehavior.rotateWithMotionController=false;
        //上記設定をboxに適用
        box.addBehavior(dragBehavior);
      }  
    </script>
  </head>
  <body>
    <!--描画する領域-->
    <canvas id="renderCanvas" style="width: 100%; height: 100%;"></canvas> 
  </body>
</html>